// /api/patient-analyzer.js - ANALYTICAL, HUMAN-CENTERED VERSION FOR PATIENTS

const systemInstruction = `
ุฃูุช ุทุจูุจ ุงุณุชุดุงุฑู ูุชุฎุตุต ูู ุงูุทุจ ุงูุจุงุทูู ูุงูุฑุนุงูุฉ ุงูุดุงููุฉ. ูููุชู ูู ูุณุงุนุฏุฉ ุงููุฑูุถ ุนูู ููู ุญุงูุชู ุจูุงุกู ุนูู ูุง ุฃุฏุฎูู ูู ุฃุนุฑุงุถุ ุฃุฏููุฉุ ูุชุดุฎูุตุงุช.

**ุฃุณููุจู ูุฌุจ ุฃู ูููู:**
- ุฅูุณุงููุ ุชูุนููุ ูููู.
- ูุง ุชุณุชุฎุฏู ูุบุฉ ููุฏ ุชุฃููููุ ุจู ูุบุฉ ุฏุงุนูุฉ.
- ุงุณุชูุดู ุงูุฎูููุงุช ุงููุญุชููุฉ ูููุดุงูู (ูุซูุงู: ุงูุชูุงุจ ูุณุงูู โ ููู).
- ุงูุชุฑุญ ูุญูุต ูุงูุตุฉุ ูุชุฎุตุตุงุช ููุฑุงุฌุนุชูุง.
- ุฎุงุทุจ ุงููุฑูุถ ุจู "ุฃูุช"ุ ูุจููู ุงูุชุญุฐูุฑุงุช ุจูุบุฉ ูุญุชุฑูุฉ.

**ูููู ุงูุชูุฑูุฑ ุงูุฅูุฒุงูู:**
1. <h3>ุชุญููู ุญุงูุชู ุงูุตุญูุฉ</h3>
2. **ููุฎุต ุงูุจูุงูุงุช ุงููุฏุฎูุฉ** (ุงูุนูุฑุ ุงูุฌูุณุ ุงูุฃุนุฑุงุถุ ุงูุฃุฏููุฉุ ุชุญุงูููุ ุฅูุฎ).
3. **ุชุญููู ุณุฑูุฑู ุดุงูู**:
   - ุงูุนูุงูุงุช ุจูู ุงูุฃุนุฑุงุถ ูุงูุชุงุฑูุฎ ุงูุทุจู.
   - ุชุญุฐูุฑุงุช ุชุฎุต ุงูุฃุฏููุฉ ุฃู ุงูุฃุนุฑุงุถ.
4. **ุงูุชุฑุงุญุงุช ุงูุฑุนุงูุฉ ุงูุตุญูุฉ**:
   - ูุญูุต ุถุฑูุฑูุฉ.
   - ุชุฎุตุตุงุช ูููุตุญ ุจูุฑุงุฌุนุชูุง.
   - ุฃุณุฆูุฉ ุชูุชุฑุญูุง ุนูู ุทุจูุจู.
5. **ุชูุถูุญุงุช ุทุจูุฉ ูุจุณุทุฉ** ุนูุฏ ุงูุญุงุฌุฉ.
6. **ุงูุฎุงุชูุฉ:** "ูุฐุง ุงูุชูุฑูุฑ ูุจุฏุฆู ููุง ูุบูู ุนู ูุฑุงุฌุนุฉ ุงูุทุจูุจ ุงููุฎุชุต."

**ุงููุตุงุฏุฑ ุงูููุตู ุจูุง:**
UpToDate, Mayo Clinic, Medscape, WHO, FDA
`;

function buildUserPrompt(caseData) {
    return `
**ุจูุงูุงุช ุงููุฑูุถ:**

- ุงูุนูุฑ: ${caseData.age || "ุบูุฑ ูุญุฏุฏ"}
- ุงูุฌูุณ: ${caseData.sex || "ุบูุฑ ูุญุฏุฏ"}
- ุงูุฃุนุฑุงุถ: ${caseData.symptoms || "ูุง ููุฌุฏ"}
- ุงูุชุงุฑูุฎ ุงูุตุญู: ${caseData.history || "ูุง ููุฌุฏ"}
- ุงูุชุญุงููู: ${caseData.labs || "ูุง ููุฌุฏ"}
- ุงูุฃุฏููุฉ: ${caseData.medications || "ูุง ููุฌุฏ"}
- ุญุงูู: ${caseData.isPregnant ? "ูุนู" : "ูุง"}
- ูุฏุฎู: ${caseData.isSmoker ? "ูุนู" : "ูุง"}
    `;
}

export default async function handler(req, res) {
    res.setHeader("Access-Control-Allow-Origin", "*");
    res.setHeader("Access-Control-Allow-Methods", "POST, OPTIONS");
    res.setHeader("Access-Control-Allow-Headers", "Content-Type, Authorization");

    if (req.method === "OPTIONS") return res.status(200).end();
    if (req.method !== 'POST') return res.status(405).json({ error: 'Method Not Allowed' });

    try {
        const apiKey = process.env.GEMINI_API_KEY;
        if (!apiKey) throw new Error("GEMINI_API_KEY is not set.");
        const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-latest:generateContent?key=${apiKey}`;

        const userPrompt = buildUserPrompt(req.body);
        const parts = [{ text: systemInstruction }, { text: userPrompt }];

        const payload = {
            contents: [{ role: "user", parts }],
            generationConfig: { temperature: 0.4, topP: 0.9, topK: 40 },
        };

        const response = await fetch(apiUrl, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(payload),
        });

        if (!response.ok) {
            const errorBody = await response.json();
            console.error("Gemini API Error:", errorBody);
            throw new Error(errorBody.error?.message || `API request failed: ${response.statusText}`);
        }

        const result = await response.json();

        if (!result.candidates?.[0]?.content?.parts?.[0]?.text) {
            throw new Error("ูุดู ุงููููุฐุฌ ูู ุฅูุดุงุก ุงูุชูุฑูุฑ.");
        }

        const reportHtml = result.candidates[0].content.parts[0].text;
        return res.status(200).json({ htmlReport: reportHtml });

    } catch (err) {
        console.error("๐ฅ Server Error in /api/patient-analyzer:", err);
        return res.status(500).json({
            error: "ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชุญููู ุงูุญุงูุฉ",
            detail: err.message,
        });
    }
}
