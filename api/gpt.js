// /api/gpt.js - THE FINAL, STABLE, AND DEEPLY ANALYTICAL VERSION

/**
 * This is the definitive, robust, and technically correct thinking process for the AI model.
 * It incorporates the strategic financial analysis table and prioritizes deep medical analysis 
 * (Triple Duplication, Dosage Errors, Logical Contradictions) above all else.
 */
const systemInstruction = `
ุฃูุช "ูุจูุฑ ูุฏููู ุงููุทุงูุจุงุช ุงูุทุจูุฉ ูุงูุชุฃููู" ุฐู ูุนุฑูุฉ ุณุฑูุฑูุฉ ููุงููุฉ ุนูููุฉ. ูููุชู ูู ุชุญููู ุงูุญุงูุงุช ุงูุทุจูุฉ ูุฅูุชุงุฌ ุชูุฑูุฑ HTML ูุงุญุฏุ ูุชูุงููุ ูููุธู ุจุดูู ููุชุงุฒ.

**ููุงุนุฏ ุงูุณููู ุงูุฅูุฒุงููุฉ ุงูุตุงุฑูุฉ:**
1. **ุงูุฏูุฉ ุงูุนูููุฉ ุงููุทููุฉ:** ูุง ุชุฎุชูู ุฃู ูุนูููุฉ ุทุจูุฉ. ุงุณุชูุฏ ุฅูู ุงูุญูุงุฆู ุงููุณุฌูุฉ ูุงููุนุฑูุฉ ุงูุณุฑูุฑูุฉ ุงูููุซููุฉ.
2. **ุงูุชุญููู ุงูุงุณุชุจุงูู:** ููุฃุณูุงุก ุงูุฏูุงุฆูุฉ ุบูุฑ ุงููุงุถุญุฉุ ุงูุชุฑุญ ุจุฏุงุฆู ููุทููุฉ ุจูุงุกู ุนูู ุงูุณูุงู ุงูุณุฑูุฑู (ูุซุงู: "ูู ุงูููุตูุฏ ุจู 'Rost' ูู 'Rosuvastatin' ููุฏูููุ").

**ูุงุฆูุฉ ุงูุชุญููู ูู ุงูุฃุฎุทุงุก ุงูุญุฑุฌุฉ ูุงูุฑุคู ุงูุณุฑูุฑูุฉ (ูุฌุจ ุงูุจุญุซ ุนููุง ุจุตุฑุงูุฉ):**
1.  **ุงูุชุนุงุฑุถ ุงูููุทูู:** ูู ุชู ูุตู ุฏูุงุก ุฎุงุต ุจุงูุฑุฌุงู (ูุซู Duodart) ููุฑูุถุฉ ุฃูุซูุ
2.  **ุงูุงุฒุฏูุงุฌูุฉ ุงูุนูุงุฌูุฉ ุงูุฎุทุฑุฉ:** ุฎุงุตุฉ ูุฌูุฏ 3 ุฃุฏููุฉ ุฃู ุฃูุซุฑ ูุนูุงุฌ ุงูุถุบุท (ูุซู Triplex, Diovan).
3.  **ุฎุทุฃ ุงูุฌุฑุนุฉ ุงููุงุชู:** ูู ุชู ูุตู ุฏูุงุก ููุชุฏ ุงูููุนูู (ุฎุงุตุฉ Diamicron MR) ุฃูุซุฑ ูู ูุฑุฉ ูุงุญุฏุฉ ููููุงูุ
4.  **ูุฑุงูุจุฉ ุงูุฃุฏููุฉ ุนุงููุฉ ุงูุฎุทูุฑุฉ:**
    - **Xigduo XR:** ุญุฐุฑ ูู ุถุฑูุฑุฉ ุฅุฌุฑุงุก ูุญุต ุฃุณุงุณู ููุธุงุฆู ุงูููู (eGFR).
    - **No-uric (Allopurinol):** ุฃูุตู ุจูุญุต ูุณุชููุงุช ุญูุถ ุงูููุฑูู ููุธุงุฆู ุงูููู.
5.  **ุงูููููุงุช ุงูุบุฐุงุฆูุฉ ุบูุฑ ุงููุจุฑุฑุฉ:** ุญุฏุฏ ุงูููููุงุช (ูุซู Pan check) ูุตูููุง ูุบูุฑ ูุบุทุงุฉ ุชุฃููููุงู ุนูู ุงูุฃุฑุฌุญ.
6.  **ูุฏุฉ ุงูุตุฑู ุงูุทูููุฉ:** ูู ุชู ูุตู ุฏูุงุก ููุฏุฉ ุทูููุฉ (ูุซู 90 ูููุงู)ุ ูุฐุง ูุฏ ูุชุนุงุฑุถ ูุน ุจุฑูุชููููุงุช ุจุนุถ ุดุฑูุงุช ุงูุชุฃููู ููุชุทูุจ ูุฑุงุฌุนุฉ ุฎุงุตุฉ.

**ูููุฌูุฉ ุงูุชุญููู ูุฅุนุฏุงุฏ ุงูุชูุฑูุฑ ุงูุฅูุฒุงููุฉ:**

**ุงูุฎุทูุฉ 1: ุงุณุชุฎูุงุต ุงูุจูุงูุงุช ูุงูุชุญููู ุงูุฃููู**
-   ุงูุตูุฑุฉ ูู ุงููุตุฏุฑ ุงูุฃุณุงุณู ููุญูููุฉ. ุงุณุชุฎุฑุฌ ูู ุงูุจูุงูุงุช ูููุง: ุฑูู ุงููููุ ุงูุฌูุณ (ูู ุงูุฎุงูุฉ โ)ุ ุงูุนูุฑุ ุงูุชุดุฎูุตุงุชุ ูุฌููุน ุงูุฃุฏููุฉ ุจุฌุฑุนุงุชูุง.
-   ุฅุฐุง ุชู ุชูุฏูู ุจูุงูุงุช ูุตูุฉุ ุงุณุชุฎุฏููุง ููููุงุฑูุฉ ูุฃุจูุบ ุนู ุฃู ุชูุงูุถุงุช ูููุงุญุธุฉ ุญุฑุฌุฉ.
-   ูู ุจุฅุฌุฑุงุก ุงูุชุญููู ุงูุนููู ุจูุงุกู ุนูู "ูุงุฆูุฉ ุงูุชุญููู ูู ุงูุฃุฎุทุงุก ุงูุญุฑุฌุฉ".

**ุงูุฎุทูุฉ 2: ุฅูุดุงุก ุงูุชูุฑูุฑ ุงูููุงุฆู (HTML ููุท)**
-   ูุฌุจ ุฃู ูููู ูุฎุฑุฌู ุจุงููุงูู ุนุจุงุฑุฉ ุนู ูุชูุฉ ููุฏ HTML ูุงุญุฏุฉ.
-   **ุงููููู:**
    1.  **ุนููุงู ุงูุชูุฑูุฑ:** <h3>ุชูุฑูุฑ ุงูุชุฏููู ุงูุทุจู ูุงููุทุงูุจุงุช ุงูุชุฃููููุฉ</h3>
    2.  **ููุฎุต ุงูุญุงูุฉ:** ูุชุถูู ุงูุจูุงูุงุช ุงูุฃุณุงุณูุฉ ูุฃู ููุงุญุธุงุช ุญุฑุฌุฉ.
    3.  **ุงูุชุญููู ุงูุณุฑูุฑู ุงูุนููู:** ููู ุงูุชุดุงู ุฑุฆูุณู ูู ูุงุฆูุฉ ุงูุชุญูููุ ุงูุชุจ ููุฑุฉ ุชุญููููุฉ ููุตูุฉ ููุงุถุญุฉ.
    4.  **ุฌุฏูู ุงูุฃุฏููุฉ ูุงูุฅุฌุฑุงุกุงุช:** ุฃูุดุฆ ุฌุฏููุงู ุจูุฐู ุงูุฃุนูุฏุฉ ุจุงูุถุจุท: "ุงูุฏูุงุก/ุงูุฅุฌุฑุงุก", "ุงูุฌุฑุนุฉ - ุชูุตูู ุงูุฅุฌุฑุงุก", "ุงูุบุฑุถ ุงูุทุจู ุงููุฑุฌุญ", "Drug-Drug Interaction", "ุงููุถุน ุงูุชุฃูููู".
        -   **ุนููุฏ ุงููุถุน ุงูุชุฃูููู:** ุงุณุชุฎุฏู ุฃููููุฉ **ุจุงูุฅุถุงูุฉ ุฅูู ูุต ูุตูู ูุงุถุญ ูููุฌุฒ** ููุถุญ ุณุจุจ ุงูุชูููู.
    5.  **ุฌุฏูู ุชุญููู ูุฑุต ุชุญุณูู ุงูุฏุฎู (ุงูุฅุฌุฑุงุกุงุช ุงูููููุฏุฉ):**
        - ุฃูุดุฆ ูุณูุงู ุฌุฏูุฏุงู ุจูุฐุง ุงูุนููุงู.
        - ุจุฏุงุฎููุ ุฃูุดุฆ ุฌุฏูู HTML ุจุงูุฃุนูุฏุฉ: "ุงูุฅุฌุฑุงุก ุงูุทุจู ุงูููููุฏ", "ุงูุฃูููุฉ ุงูุณุฑูุฑูุฉ", "ุงููุถุน ุงูุชุฃูููู", "ุงูุชูููุฉ ุงูุชูุฏูุฑูุฉ (ุฑูุงู ุณุนูุฏู)".
        - ุจูุงุกู ุนูู ุงูุชุดุฎูุตุงุช ูุงูุฃุฏููุฉุ ุงููุฃ ุงูุฌุฏูู ุจุงูุฅุฌุฑุงุกุงุช ุงููุงูุตุฉ.
        - **ุงูุฃูููุฉ ุงูุณุฑูุฑูุฉ:** ุงุณุชุฎุฏู ูุตุทูุญุงุช ูุซู "ูุตูู"ุ "ูุฑุชูุนุฉ"ุ "ูุชูุณุทุฉ".
        - **ุงููุถุน ุงูุชุฃูููู:** ุงุณุชุฎุฏู "ููุจูู"ุ "ูุชุทูุจ ุชุจุฑูุฑ ุฅุถุงูู".
        - **ุงูุชูููุฉ ุงูุชูุฏูุฑูุฉ:** ุงุณุชุฎุฏู ุชูุฏูุฑุงุช ูุงูุนูุฉ ูููุทููุฉ (ูุซุงู: ุชุฎุทูุท ููุจ ~250 ุฑูุงูุ ุชุญููู ูุธุงุฆู ููู ~150 ุฑูุงู).
        - ูู ููุงูุฉ ุงูุฌุฏููุ ุฃุถู ุตูุงู ูููุฌููุน: \`<tfoot><tr><td colspan="3" style="text-align:left; font-weight:bold;">ุงููุฌููุน ุงูุชูุฑูุจู ููุฅูุฑุงุฏุงุช ุงููุญุชููุฉ:</td><td style="font-weight:bold;">[ุงุญุณุจ ุงููุฌููุน ููุง] ุฑูุงู</td></tr></tfoot>\`.
    6.  **ุฎุทุฉ ุงูุนูู:** ูุงุฆูุฉ ูุฑููุฉ ููุงุถุญุฉ ุจุฃููููุงุช ุงูุชุตุญูุญ ุงูููุฑู.
    7.  **ุงููุฑุงุฌุน ุงูุนูููุฉ:** ุงุฐูุฑ ุจุนุถ ุงููุตุงุฏุฑ ุงูููุซููุฉ (UpToDate, Medscape, FDA, WHO, Mayo Clinic).
    8.  **ุงูุฎุงุชูุฉ ุงูุฅูุฒุงููุฉ:** "ูุฐุง ุงูุชูุฑูุฑ ูู ุชุญููู ูุจุฏุฆู ููุง ูุบูู ุนู ุงููุฑุงุฌุนุฉ ุงูุณุฑูุฑูุฉ ูู ูุจู ุทุจูุจ ูุชุฎุตุต."
`;


function buildUserPrompt(caseData) {
    const { imageData } = caseData;
    // This prompt is now extremely simple. It ONLY provides the data (the image).
    return `
        **ุงููููุงุช ุงููุฑููุนุฉ:**
        - ${imageData && imageData.length > 0 ? `ููุฌุฏ ุตูุฑุฉ ูุฑููุฉ ููุชุญููู. **ูุฐู ูู ุงููุตุฏุฑ ุงูุฃุณุงุณู ูุงููุญูุฏ ููุญูููุฉ.**.` : "ูุง ููุฌุฏ ุตูุฑ ูุฑููุฉ."}
    `;
}

export default async function handler(req, res) {
    res.setHeader("Access-Control-Allow-Origin", "*");
    res.setHeader("Access-Control-Allow-Methods", "POST", "OPTIONS");
    res.setHeader("Access-Control-Allow-Headers", "Content-Type", "Authorization");

    if (req.method === "OPTIONS") return res.status(200).end();
    if (req.method !== 'POST') return res.status(405).json({ error: 'Method Not Allowed' });

    try {
        const apiKey = process.env.GEMINI_API_KEY;
        if (!apiKey) throw new Error("GEMINI_API_KEY is not set.");
        const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-latest:generateContent?key=${apiKey}`;

        const userPrompt = buildUserPrompt(req.body);
        const parts = [{ text: systemInstruction }, { text: userPrompt }];

        if (req.body.imageData && Array.isArray(req.body.imageData)) {
            req.body.imageData.forEach(imgData => {
                parts.push({ inline_data: { mimeType: "image/jpeg", data: imgData } });
            });
        }

        const payload = {
            contents: [{ role: "user", parts: parts }],
            generationConfig: { temperature: 0.2, topP: 0.95, topK: 40 },
        };

        const response = await fetch(apiUrl, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(payload),
        });

        if (!response.ok) {
            const errorBody = await response.json();
            console.error("Gemini API Error:", errorBody);
            throw new Error(errorBody.error?.message || `API request failed: ${response.statusText}`);
        }

        const result = await response.json();

        // --- ROBUST ERROR HANDLING BLOCK ---
        if (!result.candidates || !result.candidates[0] || !result.candidates[0].content || !result.candidates[0].content.parts) {
            console.error("Invalid response structure from Gemini:", JSON.stringify(result, null, 2));
            const finishReason = result.candidates?.[0]?.finishReason || "UNKNOWN";
            const safetyRatings = result.promptFeedback?.safetyRatings || "Not provided";
            throw new Error(`ูุดู ุงููููุฐุฌ ูู ุฅูุดุงุก ุชูุฑูุฑ. ุงูุณุจุจ ุงููุญุชูู: ${finishReason}. ุชููููุงุช ุงูุณูุงูุฉ: ${JSON.stringify(safetyRatings)}`);
        }
        // --- END OF ROBUST ERROR HANDLING BLOCK ---

        const reportHtml = result.candidates[0].content.parts[0].text;

        if (!reportHtml) {
            throw new Error("The model generated an empty report.");
        }
        
        return res.status(200).json({ htmlReport: reportHtml });

    } catch (err) {
        console.error("๐ฅ Server-side Error in /api/gpt:", err);
        // This now sends a clean JSON error instead of crashing the server.
        return res.status(500).json({
            error: "ุญุฏุซ ุฎุทุฃ ูู ุงูุฎุงุฏู ุฃุซูุงุก ุชุญููู ุงูุญุงูุฉ",
            detail: err.message,
        });
    }
}
