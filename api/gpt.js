// /api/gpt.js

/**
 * @description The intelligent backend for the Medical & Insurance Review Expert system.
 * It receives comprehensive case data, including images, from the frontend,
 * and uses a powerful, structured prompt to generate a detailed analytical report with Gemini.
 */
export default async function handler(req, res) {
    // Set CORS headers for cross-origin requests
    res.setHeader("Access-Control-Allow-Origin", "*");
    res.setHeader("Access-Control-Allow-Methods", "POST, OPTIONS");
    res.setHeader("Access-Control-Allow-Headers", "Content-Type, Authorization");

    // Handle preflight OPTIONS request
    if (req.method === "OPTIONS") {
        return res.status(200).end();
    }

    // Ensure the request method is POST
    if (req.method !== "POST") {
        return res.status(405).json({ error: "Method Not Allowed" });
    }

    try {
        const apiKey = process.env.GEMINI_API_KEY;
        if (!apiKey) {
            throw new Error("GEMINI_API_KEY environment variable is not set.");
        }
        const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-latest:generateContent?key=${apiKey}`;

        // Destructure all expected data from the request body
        const {
            gender,
            isPregnant,
            pregnancyMonth,
            height,
            weight,
            temperature,
            bloodPressure,
            caseDescription,
            diagnosis,
            labResults,
            medicationsProcedures,
            imageData
        } = req.body;

        // --- Advanced Prompt Engineering ---
        // This prompt is the core "brain" of the application.
        const htmlPrompt = `
            ุฃูุช "ุฎุจูุฑ ุงููุฑุงุฌุนุฉ ุงูุทุจูุฉ ูุงูุชุฃููู" (Medical & Insurance Review Expert).
            ูููุชู ูู ุชุญููู ุงูุจูุงูุงุช ุงูุทุจูุฉ ุงูุดุงููุฉ ุงูููุฏูุฉ ูู (ุณูุงุก ูุงูุช ูุตูุฉ ุฃู ูู ุงูุตูุฑ) ูุชูุฏูู ุชูุฑูุฑ ุชุญูููู ุงุญุชุฑุงูู ุจุตูุบุฉ HTML.

            ---
            **ุงูุจูุงูุงุช ุงููุงุฑุฏุฉ ููุชุญููู:**

            **1. ูุนูููุงุช ุงููุฑูุถ:**
            - ุงูุฌูุณ: ${gender || "ูู ูุญุฏุฏ"}
            ${gender === 'female' ? `- ุญุงูู: ${isPregnant === 'yes' ? `ูุนูุ ุงูุดูุฑ ${pregnancyMonth || 'ุบูุฑ ูุญุฏุฏ'}` : 'ูุง'}` : ''}
            - ุงูุทูู: ${height ? `${height} ุณู` : "ูู ูุญุฏุฏ"}
            - ุงููุฒู: ${weight ? `${weight} ูุฌู` : "ูู ูุญุฏุฏ"}
            - ุฏุฑุฌุฉ ุงูุญุฑุงุฑุฉ: ${temperature ? `${temperature}ยฐC` : "ูู ุชุญุฏุฏ"}
            - ุถุบุท ุงูุฏู: ${bloodPressure || "ูู ูุญุฏุฏ"}

            **2. ุชูุงุตูู ุงูุญุงูุฉ:**
            - ูุตู ุงูุญุงูุฉ: ${caseDescription || "ูู ูุญุฏุฏ"}
            - ุงูุชุดุฎูุต ุงููุจุฏุฆู: ${diagnosis || "ูู ูุญุฏุฏ"}
            - ูุชุงุฆุฌ ุงูุชุญุงููู ูุงูุฃุดุนุฉ: ${labResults || "ูู ูุญุฏุฏ"}
            - ุงูุฃุฏููุฉ ูุงูุฅุฌุฑุงุกุงุช ุงูุญุงููุฉ: ${medicationsProcedures || "ูู ูุญุฏุฏ"}
            
            **3. ุงููููุงุช ุงููุฑููุนุฉ:**
            - ${imageData && imageData.length > 0 ? `ููุฌุฏ ${imageData.length} ุตูุฑุฉ ูุฑููุฉ ููุชุญููู.` : "ูุง ููุฌุฏ ุตูุฑ ูุฑููุฉ."}

            ---
            **ููุงุนุฏ ุงูุชุญููู (ููู ุฌุฏูุง):**

            1.  **ุงูุฃููููุฉ ูููููุงุช:** ุงูุฃููููุฉ ุงููุทููุฉ ูููููุงุช ุงููุฑููุนุฉ. ุฅุฐุง ูุงูุช ููุงู ุตูุฑุฉุ ููู ุงููุตุฏุฑ ุงูุฃุณุงุณู ููุญูููุฉ. ูู ุจุชุญููููุง ุจุฏูุฉ (ุญุชู ูู ูุงูุช ููุชูุจุฉ ุจุฎุท ุงููุฏ) ูุงุณุชุฎุฑุงุฌ ูุงูุฉ ุงูุชูุงุตูู.
            2.  **ุงููุต ูุฏุงุนูู:** ุงุณุชุฎุฏู ุงูุจูุงูุงุช ุงููุตูุฉ (ูุตู ุงูุญุงูุฉุ ุงูุชุดุฎูุตุ ุฅูุฎ) ููุตุฏุฑ ูููู ุฃู ุฏุงุนู ุฃู ูุชุฃููุฏ ูุง ูุฌุฏุชู ูู ุงูุตูุฑุฉ.
            3.  **ุชุญุฏูุฏ ุงูููุงูุต:** ุฅุฐุง ูุงุญุธุช ุฃู ูุนูููุงุช ุญูููุฉ ุถุฑูุฑูุฉ ููุชูููู ุงููุงูู ูุงูุตุฉ (ูุซู ุงูุทููุ ุงููุฒูุ ูุชุงุฆุฌ ุชุญุงููู ูุนููุฉ ูู ูุชู ุฐูุฑูุง ูููููุง ุถุฑูุฑูุฉ ููุชุดุฎูุต)ุ ูุฌุจ ุนููู ุงูุชูููู ูู ุชูุฑูุฑู ุฅูู ุฃูููุฉ ูุฐู ุงููุนูููุงุช ูููู ูููู ุฃู ุชุคุซุฑ ุนูู ุฏูุฉ ุงูุชุญููู.
            
            ---
            **ูููู ุงูุชูุฑูุฑ ุงููุทููุจ (ูุฌุจ ุฅูุชุงุฌ ููุฏ HTML ููุท):**

            <h3>ุชูุฑูุฑ ุชุญูููู ูููุตู</h3>
            
            <div class="section">
                <h4>1. ููุฎุต ุงูุญุงูุฉ ูุชุญููููุง:</h4>
                <p>[ููุงุ ูู ุจุชูุฏูู ููุฎุต ุดุงูู ููุญุงูุฉ ุจูุงุกู ุนูู ูู ุงููุนุทูุงุช. ุงุฑุจุท ุงูุชุดุฎูุต ุจุงูุฃุฏููุฉ ูุงูุฅุฌุฑุงุกุงุช ุงููุฐููุฑุฉุ ููุถุญ ููุทููุฉ ุงูุฎุทุฉ ุงูุนูุงุฌูุฉ ุงูุฃูููุฉ.]</p>
            </div>

            <div class="section">
                <h4>2. ุชูููู ุงูุฅุฌุฑุงุกุงุช ุงูุญุงููุฉ:</h4>
                <p>[ุญูู ูู ุฏูุงุก ูุฅุฌุฑุงุก. ูู ูู ุงูุฎูุงุฑ ุงูุฃูุถูุ ูู ุงูุฌุฑุนุฉ ููุงุณุจุฉุ ูู ููุงู ุชุฏุงุฎูุงุช ุฏูุงุฆูุฉ ูุญุชููุฉุ ุงููุฏ ุงูุงุฎุชูุงุฑุงุช ุงูุณูุฆุฉ ุจูุถูุญ ุนููู.]</p>
            </div>

            <div class="section">
                <h4>3. ุชุญุฏูุฏ ุงูููุงูุต ูุงููุฌูุงุช (ูุง ุงูุฐู ูููุตุ):</h4>
                <p>[ุจูุงุกู ุนูู ุงูุชุดุฎูุต ูุงูุญุงูุฉุ ุงุฐูุฑ ุจูุถูุญ ูุง ูู ุงููุญูุตุงุช ุงููุฎุจุฑูุฉ ุฃู ุงูุฅุดุนุงุนูุฉ ุฃู ุงูุงุณุชุดุงุฑุงุช ุงูุทุจูุฉ ุงูุชู ูู ูุชู ุนูููุง ููู ุถุฑูุฑูุฉ ูุชุฃููุฏ ุงูุชุดุฎูุต ุฃู ูุถูุงู ุณูุงูุฉ ุงููุฑูุถ ุฃู ูุชูุจูุฉ ูุชุทูุจุงุช ุงูุชุฃููู.]</p>
            </div>

            <div class="section">
                <h4>4. ุชุญููู ูุฎุงุทุฑ ุงูุฑูุถ ุงูุชุฃูููู:</h4>
                <ul>
                    <li>[ุงุฐูุฑ ุงูุฅุฌุฑุงุก/ุงูุฏูุงุก ุงูุฃูู ุงูุฐู ูุฏ ููุฑูุถุ ูุน ุฐูุฑ ุงูุณุจุจ (ูุซุงู: "Pantomax 40mg: ุฎุทุฑ ุฑูุถ ูุชูุณุท ูุนุฏู ูุฌูุฏ ุชุดุฎูุต ูุงุถุญ ูููุฑุญุฉ"). ูุฏุฑ ุงููููุฉ ุงููุงููุฉ ููุฑูุถ.]</li>
                    <li>[ุงุฐูุฑ ุงูุฅุฌุฑุงุก/ุงูุฏูุงุก ุงูุซุงูู ุงูุฐู ูุฏ ููุฑูุถ...]</li>
                </ul>
            </div>

            <div class="section">
                <h4>5. ุชูุตูุงุช ูุชุทููุฑ ุงูุนูู ูุฎุทุฉ ุงูุนูู ุงููุซุงููุฉ:</h4>
                <p>[ูุฏู ุฎุทุฉ ุนูู ูุงุถุญุฉ ูููุญุณููุฉ. ุงุจุฏุฃ ุจุงููุญูุตุงุช ุงูููุชุฑุญุฉุ ุซู ุงูุฅุฌุฑุงุกุงุช ุงูุนูุงุฌูุฉ ุงููุจุฑุฑุฉ ุจูุงุกู ุนูู ูุชุงุฆุฌูุง. ุงุดุฑุญ ููู ุฃู ูุฐู ุงูุฎุทุฉ ุชุฑูุน ูู ุฌูุฏุฉ ุงูุฑุนุงูุฉ ูุชุถูู ููุงููุฉ ุงูุชุฃููู.]</p>
            </div>

            <div class="section financial-summary">
                <h4>6. ุงููุคุดุฑ ุงููุงูู:</h4>
                <table>
                    <thead><tr><th>ุงููุคุดุฑ</th><th>ุงููููุฉ (ุฑูุงู ุณุนูุฏู)</th><th>ููุงุญุธุงุช</th></tr></thead>
                    <tbody>
                        <tr><td>ุฅุฌูุงูู ุงูุฏุฎู ุงูุญุงูู (ุงููููุชุฑ)</td><td>[ุถุน ุงููููุฉ ุงูุชูุฏูุฑูุฉ ููุง]</td><td>[ููุงุญุธุฉ]</td></tr>
                        <tr><td>ุฅุฌูุงูู ุงูุฏุฎู ุจุนุฏ ุฎุตู ุงูุฑููุถ ุงููุญุชููุฉ</td><td>[ุถุน ุงููููุฉ ุงูุชูุฏูุฑูุฉ ููุง]</td><td>[ููุงุญุธุฉ]</td></tr>
                        <tr><td>ุฅุฌูุงูู ุงูุฏุฎู ุงููุญุชูู ูุน ุงูุชุญุณููุงุช</td><td>[ุถุน ุงููููุฉ ุงูุชูุฏูุฑูุฉ ููุง]</td><td>[ููุงุญุธุฉ]</td></tr>
                    </tbody>
                </table>
            </div>

            **ููู ุฌุฏูุง:** ูุฌุจ ุฃู ูููู ุฑุฏู ูู ููุฏ HTML ููุทุ ูุจุฏุฃ ูุจุงุดุฑุฉู ุจุงููุณู \`<h3>\` ุจุฏูู ุฃู ููุฏูุงุช ุฃู ุนูุงูุงุช markdown ูุซู \`\`\`html.
        `;

        // --- Construct the API Payload ---
        const parts = [{ text: htmlPrompt }];
        if (imageData && Array.isArray(imageData) && imageData.length > 0) {
            imageData.forEach(imgData => {
                parts.push({
                    inline_data: {
                        mimeType: "image/jpeg", // Assuming jpeg, can be made dynamic if needed
                        data: imgData
                    }
                });
            });
        }

        const payload = {
            contents: [{ parts: parts }],
            generationConfig: {
                temperature: 0.4, // Lower temperature for more consistent, fact-based output
            },
        };

        // --- Make the API Call to Gemini ---
        const response = await fetch(apiUrl, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(payload),
        });

        if (!response.ok) {
            const errorBody = await response.json();
            console.error("Gemini API Error:", errorBody);
            throw new Error(errorBody.error?.message || `API request failed: ${response.statusText}`);
        }

        const result = await response.json();
        
        // Safely extract the generated HTML report
        const reportHtml = result.candidates?.[0]?.content?.parts?.[0]?.text;

        if (!reportHtml) {
            console.error("No report generated by Gemini. Full response:", result);
            throw new Error("ูู ูุชููู ุงููููุฐุฌ ูู ุฅูุดุงุก ุงูุชูุฑูุฑ.");
        }
        
        // --- Send the successful response back to the frontend ---
        return res.status(200).json({ htmlReport: reportHtml });

    } catch (err) {
        // --- Handle any server-side errors ---
        console.error("๐ฅ Server-side Error in /api/gpt:", err);
        return res.status(500).json({
            error: "ุญุฏุซ ุฎุทุฃ ูู ุงูุฎุงุฏู ุฃุซูุงุก ุชุญููู ุงูุญุงูุฉ",
            detail: err.message,
        });
    }
}
